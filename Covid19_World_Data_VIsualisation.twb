<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid19_World_Data_VIsualisation' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (TABLEAU TABLE_1)' inline='true' name='federated.08rk31l16p55qu1ba0xgf1rsxhep' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLEAU TABLE_1' name='excel-direct.1dix3el0tyej0x1be7eef185ld52'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='K:/DATA SCIENCE 2025/TABLEAU 2025/ALEX_THE_ANALYST_ 2025/TABLEAU TABLE_1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1dix3el0tyej0x1be7eef185ld52' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E6:no:A1:E6:0' header='yes' outcome='2'>
            <column datatype='integer' name='TOTAL_CASES_COVID' ordinal='0' />
            <column datatype='integer' name='TOTAL_DEATHS' ordinal='1' />
            <column datatype='real' name='Total_DeathPercentage' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E6:no:A1:E6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_CASES_COVID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL_CASES_COVID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TOTAL_CASES_COVID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E4BBD2B4780E49E7B82005C999F48159]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DEATHS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL_DEATHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TOTAL_DEATHS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E4BBD2B4780E49E7B82005C999F48159]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E4BBD2B4780E49E7B82005C999F48159]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E4BBD2B4780E49E7B82005C999F48159]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E4BBD2B4780E49E7B82005C999F48159]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Cases Covid' datatype='integer' name='[TOTAL_CASES_COVID]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TOTAL_DEATHS]' role='measure' type='quantitative' />
      <column caption='Total DeathPercentage' datatype='real' name='[Total_DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E4BBD2B4780E49E7B82005C999F48159]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dhava/AppData/Local/Temp/TableauTemp/#TableauTemp_0dwyq7l025ta0318ymzys1yqf3nd.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/09/2025 11:01:54 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>TOTAL_CASES_COVID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TOTAL_CASES_COVID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOTAL_CASES_COVID</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOTAL_DEATHS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TOTAL_DEATHS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOTAL_DEATHS</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total_DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F4</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F4</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E4BBD2B4780E49E7B82005C999F48159'>
            <properties context=''>
              <relation connection='excel-direct.1dix3el0tyej0x1be7eef185ld52' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E6:no:A1:E6:0' header='yes' outcome='2'>
                  <column datatype='integer' name='TOTAL_CASES_COVID' ordinal='0' />
                  <column datatype='integer' name='TOTAL_DEATHS' ordinal='1' />
                  <column datatype='real' name='Total_DeathPercentage' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (TABLEAU TABLE_2)' inline='true' name='federated.0cdx0m11wwvpy312fxhae1k5epj5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLEAU TABLE_2' name='excel-direct.1422euw0q7pkb814lt8x5044yyw9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='K:/DATA SCIENCE 2025/TABLEAU 2025/ALEX_THE_ANALYST_ 2025/TABLEAU TABLE_2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1422euw0q7pkb814lt8x5044yyw9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H7:no:A1:H7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dhava/AppData/Local/Temp/TableauTemp/#TableauTemp_1ohty5w1lnzijb16k3ab71ip20pe.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/09/2025 11:02:54 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F4</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F4</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F8</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F8</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B62AAC464DDD42D4B6EBFA24CBE9A420'>
            <properties context=''>
              <relation connection='excel-direct.1422euw0q7pkb814lt8x5044yyw9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                  <column datatype='real' name='F3' ordinal='2' />
                  <column datatype='real' name='F4' ordinal='3' />
                  <column datatype='real' name='F5' ordinal='4' />
                  <column datatype='real' name='F6' ordinal='5' />
                  <column datatype='real' name='F7' ordinal='6' />
                  <column datatype='string' name='F8' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (TABLEAU TABLE_5)' inline='true' name='federated.0qe85nf0hkf80x177mq7z0ts6db0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLEAU TABLE_5' name='excel-direct.1dgajh201cv0jo0zsnpnk0jlojul'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='K:/DATA SCIENCE 2025/TABLEAU 2025/ALEX_THE_ANALYST_ 2025/TABLEAU TABLE_5.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1dgajh201cv0jo0zsnpnk0jlojul' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='% PopulationInfected_OVER_TIME' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% PopulationInfected_OVER_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% PopulationInfected_OVER_TIME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>% PopulationInfected_OVER_TIME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% POP. INFECTED OVER TIME' datatype='real' name='[% PopulationInfected_OVER_TIME]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8A1F059A511940E1965A11C2C0CA67E1]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dhava/AppData/Local/Temp/TableauTemp/#TableauTemp_0lmyiy5069p05l1en6y4r1c1v8qq.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/09/2025 12:42:01 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17858</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% PopulationInfected_OVER_TIME</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% PopulationInfected_OVER_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% PopulationInfected_OVER_TIME</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29369</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8A1F059A511940E1965A11C2C0CA67E1'>
            <properties context=''>
              <relation connection='excel-direct.1dgajh201cv0jo0zsnpnk0jlojul' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='% PopulationInfected_OVER_TIME' ordinal='4' />
                  <column datatype='real' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (TABLEAU TABLE_3)' inline='true' name='federated.10ex6ks0huvmpt19fdg9y1xypdbt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLEAU TABLE_3' name='excel-direct.14kmr2000d1jp51fn0r3q126lw7n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='K:/DATA SCIENCE 2025/TABLEAU 2025/ALEX_THE_ANALYST_ 2025/TABLEAU TABLE_3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.14kmr2000d1jp51fn0r3q126lw7n' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F211:no:A1:F211:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='HIGHEST_INFECTED_COUNTRY_COUNT' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='real' name='MAX % INFECTED(%)' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F211:no:A1:F211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGHEST_INFECTED_COUNTRY_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HIGHEST_INFECTED_COUNTRY_COUNT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HIGHEST_INFECTED_COUNTRY_COUNT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX % INFECTED(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MAX % INFECTED(%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>MAX % INFECTED(%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infected Country Count' datatype='integer' name='[HIGHEST_INFECTED_COUNTRY_COUNT]' role='measure' type='quantitative' />
      <column caption='Max % Infected(%)' datatype='real' name='[MAX % INFECTED(%)]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]' role='measure' type='quantitative' />
      <column caption='Countries' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/dhava/AppData/Local/Temp/TableauTemp/#TableauTemp_1ypttcu0r1skau186zob91no1579.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/09/2025 11:03:51 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGHEST_INFECTED_COUNTRY_COUNT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HIGHEST_INFECTED_COUNTRY_COUNT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGHEST_INFECTED_COUNTRY_COUNT</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MAX % INFECTED(%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[MAX % INFECTED(%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MAX % INFECTED(%)</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_20D30B0A18DB47ABBB02ACE785A661DB]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_20D30B0A18DB47ABBB02ACE785A661DB'>
            <properties context=''>
              <relation connection='excel-direct.14kmr2000d1jp51fn0r3q126lw7n' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:F211:no:A1:F211:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='HIGHEST_INFECTED_COUNTRY_COUNT' ordinal='1' />
                  <column datatype='integer' name='population' ordinal='2' />
                  <column datatype='real' name='MAX % INFECTED(%)' ordinal='3' />
                  <column datatype='real' name='F5' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GLOBAL COVID CASES : GLOBAL DEATHS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLEAU TABLE_1)' name='federated.08rk31l16p55qu1ba0xgf1rsxhep' />
          </datasources>
          <datasource-dependencies datasource='federated.08rk31l16p55qu1ba0xgf1rsxhep'>
            <column caption='Total Cases Covid' datatype='integer' name='[TOTAL_CASES_COVID]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TOTAL_DEATHS]' role='measure' type='quantitative' />
            <column caption='Total DeathPercentage' datatype='real' name='[Total_DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[TOTAL_CASES_COVID]' derivation='Sum' name='[sum:TOTAL_CASES_COVID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_DEATHS]' derivation='Sum' name='[sum:TOTAL_DEATHS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_DeathPercentage]' derivation='Sum' name='[sum:Total_DeathPercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08rk31l16p55qu1ba0xgf1rsxhep].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:TOTAL_CASES_COVID:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:Total_DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:TOTAL_DEATHS:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08rk31l16p55qu1ba0xgf1rsxhep].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:TOTAL_CASES_COVID:qk]&quot;</bucket>
              <bucket>&quot;[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:TOTAL_DEATHS:qk]&quot;</bucket>
              <bucket>&quot;[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:Total_DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08rk31l16p55qu1ba0xgf1rsxhep].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08rk31l16p55qu1ba0xgf1rsxhep].[:Measure Names]' value='184' />
            <format attr='height' value='46' />
            <format attr='border-width' scope='cols' value='2' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#1b1b1b' />
            <format attr='color' value='#12a123' />
            <format attr='text-format' field='[federated.08rk31l16p55qu1ba0xgf1rsxhep].[sum:Total_DeathPercentage:qk]' value='n#,##0.000&quot;%&quot;;-#,##0.000&quot;%&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#333333' />
            <format attr='border-width' scope='cols' value='2' />
            <format attr='background-color' value='#ffff00' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffd832' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#333333' />
            <format attr='border-width' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.08rk31l16p55qu1ba0xgf1rsxhep].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08rk31l16p55qu1ba0xgf1rsxhep].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2F8908B8-3F79-4567-83C5-9B9C54FCF9CB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AVG. TOTAL DEATH COUNT IN EACH &apos;</run>
            <run italic='true'>CONTINENT </run>
            <run>&apos;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLEAU TABLE_2)' name='federated.0cdx0m11wwvpy312fxhae1k5epj5' />
          </datasources>
          <datasource-dependencies datasource='federated.0cdx0m11wwvpy312fxhae1k5epj5'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column-instance column='[TotalDeathCount]' derivation='Avg' name='[avg:TotalDeathCount:qk]' pivot='key' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='68' />
            <format attr='width' field='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]' value='155' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[sum:TotalDeathCount:qk]' />
              <color column='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cdx0m11wwvpy312fxhae1k5epj5].[avg:TotalDeathCount:qk]</rows>
        <cols>[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{AB84F934-3942-4326-855E-7765B813EC57}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% People Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLEAU TABLE_3)' name='federated.10ex6ks0huvmpt19fdg9y1xypdbt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10ex6ks0huvmpt19fdg9y1xypdbt'>
            <column caption='Max % Infected(%)' datatype='real' name='[MAX % INFECTED(%)]' role='measure' type='quantitative' />
            <column caption='Countries' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[MAX % INFECTED(%)]' derivation='Sum' name='[sum:MAX % INFECTED(%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[Longitude (generated)]' field-type='quantitative' max='14341207.05594546' min='-2227672.4816280194' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[Latitude (generated)]' field-type='quantitative' max='6144449.112697864' min='-1313779.8987919425' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[sum:MAX % INFECTED(%):qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[sum:MAX % INFECTED(%):qk]' value='People Infected(%)'>
              <formatted-text>
                <run>People Infected(%)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[none:location:nk]' />
              <color column='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[sum:MAX % INFECTED(%):qk]' />
              <geometry column='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[Latitude (generated)]</rows>
        <cols>[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2045493B-7F3A-4C54-B514-D47C612C8EF5}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Population Infected Over Time w.r.t &apos;Country&apos;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Visual Added with some PREDICTIVE ANALYSIS/FORECASTING  -- (WHERE CAN THESE NUMBERS GO IN THE FUTURE ). 

</run>
            <run italic='true'>The FORECASTING  Atleast NEEDS  12 MONTHS OF DATA TO BE ABLE TO PREDICT INTO THE FUTURE </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLEAU TABLE_5)' name='federated.0qe85nf0hkf80x177mq7z0ts6db0' />
          </datasources>
          <datasource-dependencies datasource='federated.0qe85nf0hkf80x177mq7z0ts6db0'>
            <column caption='% POP. INFECTED OVER TIME' datatype='real' name='[% PopulationInfected_OVER_TIME]' role='measure' type='quantitative' />
            <column-instance column='[% PopulationInfected_OVER_TIME]' derivation='Avg' name='[avg:% PopulationInfected_OVER_TIME:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[% PopulationInfected_OVER_TIME]' derivation='Avg' forecast-column-base='[avg:% PopulationInfected_OVER_TIME:qk]' forecast-column-type='forecast-value' name='[fVal:avg:% PopulationInfected_OVER_TIME:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[tmn:date:qk]' field-type='quantitative' max='#2021-11-03 00:00:00#' min='#2019-11-29 00:00:00#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[tmn:date:qk]' scope='cols' value='MONTH' />
            <format attr='title' class='0' field='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[fVal:avg:% PopulationInfected_OVER_TIME:qk]' scope='rows' value='AVG. % POP. INFECTED OVER TIME' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[tmn:date:qk]' value='343' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]' />
              <text column='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]' />
              <color column='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:Forecast Indicator:nk]' />
              <text column='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[fVal:avg:% PopulationInfected_OVER_TIME:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[fVal:avg:% PopulationInfected_OVER_TIME:qk]</rows>
        <cols>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D49FBD60-973F-4AF7-9E3C-9CBECC33FB0D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Covid-19 World Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='98986' x='507' y='999'>
            <zone h='98002' id='6' type-v2='layout-basic' w='88093' x='507' y='999'>
              <zone h='38046' id='5' name='Sheet 2' w='40975' x='507' y='25500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='62547' id='10' name='Sheet 3' w='47118' x='41482' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35455' id='12' name='Sheet 4' w='88093' x='507' y='63546'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24501' id='14' name='Sheet 1' w='40975' x='507' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='172' h='98002' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='10893' x='88600' y='999'>
              <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]' type-v2='color' w='10893' x='88600' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='81' h='11111' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[sum:MAX % INFECTED(%):qk]' show-title='false' type-v2='color' w='10893' x='88600' y='20475'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='486' h='61673' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]&#10;[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:Forecast Indicator:nk]' type-v2='color' w='10893' x='88600' y='31586'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='17' param='vert' type-v2='layout-flow' w='98986' x='507' y='999'>
                <zone fixed-size='188' h='24501' id='14' is-fixed='true' name='Sheet 1' w='40975' x='507' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62547' id='10' is-fixed='true' name='Sheet 3' w='47118' x='41482' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='11111' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[sum:MAX % INFECTED(%):qk]' show-title='false' type-v2='color' w='10893' x='88600' y='20475'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38046' id='5' is-fixed='true' name='Sheet 2' w='40975' x='507' y='25500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]' type-v2='color' w='10893' x='88600' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='35455' id='12' is-fixed='true' name='Sheet 4' w='88093' x='507' y='63546'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='486' h='61673' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]&#10;[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:Forecast Indicator:nk]' type-v2='color' w='10893' x='88600' y='31586'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{708E619E-DF28-4E03-98B8-7197E53FCEDC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08rk31l16p55qu1ba0xgf1rsxhep].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BF09DA8-FD83-49C2-8C7F-E5D44E01D76B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49E97182-40AA-43EA-A2AF-B44301304EA9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[sum:MAX % INFECTED(%):qk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ex6ks0huvmpt19fdg9y1xypdbt].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C89D36B3-B49E-471A-A3B9-406B92C0CF31}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]&#10;[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:Forecast Indicator:nk]</field>
            <field>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]</field>
            <field>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86DE93E5-B712-48C3-8461-9A902282BF1E}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid-19 World Analysis'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cdx0m11wwvpy312fxhae1k5epj5].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:Forecast Indicator:nk]</field>
              <field>[federated.0qe85nf0hkf80x177mq7z0ts6db0].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{29D89CFD-78CB-4FE9-89D0-C0B1EEE75089}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid-19 World Analysis' width='192'>
      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
      6urgwoW3eO/SRRJhg0K5TqVSIR6NUK5U0UaIVFcXb56/wHe+9T5dyQib2Tw7pRK7tbATZ84w
      f/0arutwfXaNibF+zp8e5b/99BecOz9Fb083A0MnuPzBHzPSn2Tw2NA+JbovSqQjRWeygwvn
      z/PNS28DEEwOYGVuEkweIaQ8ap5JyFRsbzerZ0NDwyilaNTKVOo2iWSQ0k79MRuI8WO9zCyt
      4Vg1qsRxdjI4dgNXDKKRCJbVYGtrC56kC6o1bkunf3hoGAWMnL3M7K9+Qs/xr5ihvOxDy/r6
      uoiIVIo5uXXnrni6GZNeWxN7z5G1clGmp6clVyyLVbwn/+Un/yg3bs2K7XriNKoyffWq3F9d
      kXy5IRsbG6K1lpWFWZlfXJEH65uitZbFuduytrklufSGWJ5ItZSX6elpyZcqYtd3JJsvi3Zt
      2Uxvte7qycZGWly7JpmtvIh2ZWMzI3ajLNncjohoyayvytXp61LYqYprN+T2jeuyup4Rz7Xl
      9o1rkitWZKewJVevXpWNbF6058js7RuysLggW/lK+/mKubRcnZ6WXKHcTBntyMzMnGgR8dzm
      OTNzC2K7rmxspOVR1tbWRETEqZclu12SbHpTbFdLNr0pzt79Hnl3ubcwJzt1R0q5Tbm/mRMR
      kbsLCyJ2TTayhaZ8WxuSyVfEc225dX1atkvV/QJoLfeXF+T6jVtSt10p5tIyPX1NynVLtGvL
      zWtX5cHafdnYKrXej8jWxoZYIrKznZHpGzNi10qSaaeJln/86f8QazdDfEV4IaoQbj3P4kaD
      0+NHX0SZ9HkFya6vkqvpr9wkab4ukM/XGn8gzOdrzTMLwBcxMH8eI3Qfn1eBZxaA2dk7z7yI
      X4vyeV15ZgH4Q0xV4eNzWDx5enTtMTM7g8Kv3vh8tTlwmdS5G59TtiDS2ce5cxcOVyofn0Pi
      id2gojUrqyucGBv/Qhd5mRMm+fi8TA74Awj/99Nfsby0QjiR4sPLFw9XKh+fQ+LJBUApLn/w
      J4yNjZFOP1woTUTIZdN0pPqxqiUCkSSxyJefK9PH51XhwC6epcV5trdz3JqZbYe5Vg0jGGJp
      YZ71zRyr91YORUgfn5fFgY3gs2cmuXXrNm+cPdcONQMBMukMI2PH2Mo08LxKewZofyzA53Xk
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='70' name='Sheet 1' width='192'>
      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
      UY0wgCCq+X9EwPyXAIDz+AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      kM6jhZgnSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
